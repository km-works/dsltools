(Grammar (Production @name="Grammar" (Choice (Sequence (NonTerminal @name="w") (Multiple @multiplicity="OneOrMore" (NonTerminal @name="Definition")) (NonTerminal @name="EOI")))) (Production @name="Definition" (Choice (Sequence (NonTerminal @name="Identifier") (NonTerminal @name="DEFINES") (NonTerminal @name="w") (NonTerminal @name="Expression")))) (Production @name="Expression" (Choice (Sequence (NonTerminal @name="Sequence") (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (NonTerminal @name="ALT") (NonTerminal @name="Sequence")))) (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="ALT"))))) (Production @name="Sequence" (Choice (Sequence (Multiple @multiplicity="OneOrMore" (NonTerminal @name="Term"))))) (Production @name="Term" (Choice (Sequence (Multiple @multiplicity="ZeroOrOne" (Choice (Sequence (NonTerminal @name="AND")) (Sequence (NonTerminal @name="NOT")))) (NonTerminal @name="Primary") (Choice @epsilon="true" (Sequence (NonTerminal @name="OPTION")) (Sequence (NonTerminal @name="STAR")) (Sequence (NonTerminal @name="PLUS")))))) (Production @name="Primary" (Choice (Sequence (NonTerminal @name="Identifier") (Predicate @type="MustNotMatch" (NonTerminal @name="DEFINES"))) (Sequence (NonTerminal @name="LPAREN") (NonTerminal @name="Expression") (NonTerminal @name="RPAREN")) (Sequence (NonTerminal @name="Terminal")))) (Production @name="Terminal" (Choice (Sequence (NonTerminal @name="StringLiteral") (NonTerminal @name="w")) (Sequence (NonTerminal @name="LBRACK") (Multiple @multiplicity="OneOrMore" (NonTerminal @name="CodePointRange")) (NonTerminal @name="RBRACK")) (Sequence (NonTerminal @name="DOT")))) (Production @name="CodePointRange" (Choice (Sequence (NonTerminal @name="CodePoint") (Literal @caption="-") (NonTerminal @name="CodePoint")) (Sequence (NonTerminal @name="CodePoint")))) (Production @name="CodePoint" (Choice (Sequence (NonTerminal @name="EscapeSequence")) (Sequence (Predicate @type="MustNotMatch" (NonTerminal @name="ESC")) (AnyChar)))) (Production @name="EscapeSequence" (Choice (Sequence (NonTerminal @name="ESC") (CharClass @caption="nrt'\"[]\\" (CharRange @first="n") (CharRange @first="r") (CharRange @first="t") (CharRange @first="'") (CharRange @first="\"") (CharRange @first="[") (CharRange @first="]") (CharRange @first="\\"))) (Sequence (NonTerminal @name="UnicodeEscape")))) (Production @name="UnicodeEscape" (Choice (Sequence (NonTerminal @name="ESC") (Literal @caption="u") (NonTerminal @name="HexQuad")))) (Production @name="HexQuad" (Choice (Sequence (NonTerminal @name="HexDigit") (NonTerminal @name="HexDigit") (NonTerminal @name="HexDigit") (NonTerminal @name="HexDigit")))) (Production @name="HexDigit" (Choice (Sequence (CharClass @caption="0-9a-fA-F" (CharRange @first="0" @last="9") (CharRange @first="a" @last="f") (CharRange @first="A" @last="F"))))) (Production @name="DEFINES" (Choice (Sequence (Literal @caption="<-")))) (Production @name="ALT" (Choice (Sequence (Literal @caption="/") (NonTerminal @name="w")))) (Production @name="AND" (Choice (Sequence (Literal @caption="&") (NonTerminal @name="w")))) (Production @name="NOT" (Choice (Sequence (Literal @caption="!") (NonTerminal @name="w")))) (Production @name="OPTION" (Choice (Sequence (Literal @caption="?") (NonTerminal @name="w")))) (Production @name="STAR" (Choice (Sequence (Literal @caption="*") (NonTerminal @name="w")))) (Production @name="PLUS" (Choice (Sequence (Literal @caption="+") (NonTerminal @name="w")))) (Production @name="LPAREN" (Choice (Sequence (Literal @caption="(") (NonTerminal @name="w")))) (Production @name="RPAREN" (Choice (Sequence (Literal @caption=")") (NonTerminal @name="w")))) (Production @name="LBRACK" (Choice (Sequence (Literal @caption="[")))) (Production @name="RBRACK" (Choice (Sequence (Literal @caption="]") (NonTerminal @name="w")))) (Production @name="DOT" (Choice (Sequence (Literal @caption=".") (NonTerminal @name="w")))) (Production @name="ESC" (Choice (Sequence (Literal @caption="\\")))) (Production @name="EOI" (Choice (Sequence (Predicate @type="MustNotMatch" (AnyChar))))))