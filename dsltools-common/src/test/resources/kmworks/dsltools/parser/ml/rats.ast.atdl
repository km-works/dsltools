(Grammar (Production @name="Module" (Choice (Sequence (NonTerminal @name="Spacing") (NonTerminal @name="Intro") (Multiple @multiplicity="ZeroOrMore" (NonTerminal @name="Production")) (NonTerminal @name="EOF")))) (Production @name="Intro" (Choice (Sequence (NonTerminal @name="ModuleDecl") (Multiple @multiplicity="ZeroOrMore" (NonTerminal @name="Dependency")) (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="Header")) (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="Body")) (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="Footer")) (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="Option"))))) (Production @name="ModuleDecl" (Choice (Sequence (Literal @caption="module") (NonTerminal @name="FSpacing") (NonTerminal @name="ModuleRef") (NonTerminal @name="SEMICOLON")))) (Production @name="Dependency" (Choice (Sequence (NonTerminal @name="Modification")) (Sequence (NonTerminal @name="Instantiation")) (Sequence (NonTerminal @name="Import")))) (Production @name="Modification" (Choice (Sequence (Literal @caption="modify") (NonTerminal @name="FSpacing") (NonTerminal @name="ModuleRef") (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="ModuleTarget")) (NonTerminal @name="SEMICOLON")))) (Production @name="Instantiation" (Choice (Sequence (Literal @caption="instantiate") (NonTerminal @name="FSpacing") (NonTerminal @name="ModuleRef") (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="ModuleTarget")) (NonTerminal @name="SEMICOLON")))) (Production @name="Import" (Choice (Sequence (Literal @caption="import") (NonTerminal @name="FSpacing") (NonTerminal @name="ModuleRef") (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="ModuleTarget")) (NonTerminal @name="SEMICOLON")))) (Production @name="ModuleRef" (Choice (Sequence (NonTerminal @name="QName") (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="ModuleParams"))))) (Production @name="ModuleParams" (Choice (Sequence (NonTerminal @name="OPEN") (Multiple @multiplicity="ZeroOrOne" (Choice (Sequence (NonTerminal @name="QName") (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (NonTerminal @name="COMMA") (NonTerminal @name="QName"))))))) (NonTerminal @name="CLOSE")))) (Production @name="ModuleTarget" (Choice (Sequence (Literal @caption="as") (NonTerminal @name="FSpacing") (NonTerminal @name="QName")))) (Production @name="Header" (Choice (Sequence (Literal @caption="header") (NonTerminal @name="Spacing") (NonTerminal @name="Action")))) (Production @name="Body" (Choice (Sequence (Literal @caption="body") (NonTerminal @name="Spacing") (NonTerminal @name="Action")))) (Production @name="Footer" (Choice (Sequence (Literal @caption="footer") (NonTerminal @name="Spacing") (NonTerminal @name="Action")))) (Production @name="Option" (Choice (Sequence (Literal @caption="option") (NonTerminal @name="FSpacing") (NonTerminal @name="Attribute") (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (NonTerminal @name="COMMA") (NonTerminal @name="Attribute")))) (NonTerminal @name="SEMICOLON")))) (Production @name="Production" (Choice (Sequence (NonTerminal @name="Full")) (Sequence (NonTerminal @name="Addition")) (Sequence (NonTerminal @name="Removal")) (Sequence (NonTerminal @name="Override")))) (Production @name="Full" (Choice (Sequence (NonTerminal @name="PAttributes") (NonTerminal @name="QName") (NonTerminal @name="Identifier") (NonTerminal @name="EQUAL") (NonTerminal @name="Choice") (NonTerminal @name="SEMICOLON")))) (Production @name="Addition" (Choice (Sequence (NonTerminal @name="QName") (NonTerminal @name="Identifier") (NonTerminal @name="PLUSEQUAL") (Choice (Sequence (NonTerminal @name="SName") (NonTerminal @name="ELLIPSIS") (NonTerminal @name="SLASH") (NonTerminal @name="Choice") (NonTerminal @name="SEMICOLON")) (Sequence (NonTerminal @name="Choice") (NonTerminal @name="SLASH") (NonTerminal @name="SName") (NonTerminal @name="ELLIPSIS") (NonTerminal @name="SEMICOLON")))))) (Production @name="Removal" (Choice (Sequence (NonTerminal @name="QName") (NonTerminal @name="Identifier") (NonTerminal @name="MINUSEQUAL") (NonTerminal @name="SName") (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (NonTerminal @name="COMMA") (NonTerminal @name="SName")))) (NonTerminal @name="SEMICOLON")))) (Production @name="Override" (Choice (Sequence (NonTerminal @name="QName") (NonTerminal @name="Identifier") (NonTerminal @name="COLONEQUAL") (NonTerminal @name="Choice") (NonTerminal @name="SEMICOLON")) (Sequence (NonTerminal @name="QName") (NonTerminal @name="Identifier") (NonTerminal @name="COLONEQUAL") (NonTerminal @name="ELLIPSIS") (NonTerminal @name="SLASH") (NonTerminal @name="Choice") (NonTerminal @name="SEMICOLON")) (Sequence (NonTerminal @name="QName") (NonTerminal @name="Identifier") (NonTerminal @name="COLONEQUAL") (NonTerminal @name="Choice") (NonTerminal @name="SLASH") (NonTerminal @name="ELLIPSIS") (NonTerminal @name="SEMICOLON")) (Sequence (NonTerminal @name="PAttributes") (NonTerminal @name="QName") (NonTerminal @name="Identifier") (NonTerminal @name="COLONEQUAL") (NonTerminal @name="ELLIPSIS") (NonTerminal @name="SEMICOLON")))) (Production @name="PAttributes" (Choice (Sequence (Predicate @type="MustMatch" (Choice (Sequence (NonTerminal @name="QName") (NonTerminal @name="Identifier") (NonTerminal @name="EQUAL"))))) (Sequence (NonTerminal @name="Attribute") (NonTerminal @name="PAttributes")))) (Production @name="Choice" (Choice (Sequence (NonTerminal @name="Sequence") (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (NonTerminal @name="SLASH") (NonTerminal @name="Sequence"))))))) (Production @name="Sequence" (Choice (Sequence (Predicate @type="MustNotMatch" (Choice (Sequence (NonTerminal @name="SName") (NonTerminal @name="ELLIPSIS")) (Sequence (NonTerminal @name="ELLIPSIS")))) (Multiple @multiplicity="ZeroOrOne" (NonTerminal @name="SName")) (Multiple @multiplicity="ZeroOrMore" (NonTerminal @name="Voided"))))) (Production @name="Voided" (Choice (Sequence (Multiple @multiplicity="ZeroOrOne" (Choice (Sequence (Literal @caption="void") (NonTerminal @name="Spacing") (NonTerminal @name="COLON")))) (NonTerminal @name="Prefix")))) (Production @name="Prefix" (Choice (Sequence (Multiple @multiplicity="ZeroOrOne" (Choice (Sequence (NonTerminal @name="AND")) (Sequence (NonTerminal @name="NOT")) (Sequence (NonTerminal @name="CARET")) (Sequence (NonTerminal @name="Identifier") (NonTerminal @name="COLON")) (Sequence (NonTerminal @name="StringLit") (NonTerminal @name="Spacing") (NonTerminal @name="COLON")))) (NonTerminal @name="Suffix")))) (Production @name="Suffix" (Choice (Sequence (NonTerminal @name="Primary") (Multiple @multiplicity="ZeroOrOne" (Choice (Sequence (NonTerminal @name="QUESTION")) (Sequence (NonTerminal @name="STAR")) (Sequence (NonTerminal @name="PLUS"))))))) (Production @name="Primary" (Choice (Sequence (NonTerminal @name="NullLit")) (Sequence (NonTerminal @name="QName")) (Sequence (NonTerminal @name="Literal")) (Sequence (NonTerminal @name="NodeMarker")) (Sequence (NonTerminal @name="Action")) (Sequence (NonTerminal @name="OPEN") (NonTerminal @name="Choice") (NonTerminal @name="CLOSE")))) (Production @name="NullLit" (Choice (Sequence (Literal @caption="null") (NonTerminal @name="Spacing")))) (Production @name="NodeMarker" (Choice (Sequence (Literal @caption="@") (NonTerminal @name="Id") (NonTerminal @name="Spacing")))) (Production @name="Action" (Choice (Sequence (Literal @caption="{") (Multiple @multiplicity="ZeroOrMore" (NonTerminal @name="ActionBody")) (Literal @caption="}") (NonTerminal @name="Spacing")))) (Production @name="ActionBody" (Choice (Sequence (NonTerminal @name="Action")) (Sequence (NonTerminal @name="CharLit")) (Sequence (NonTerminal @name="StringLit")) (Sequence (NonTerminal @name="MLComment")) (Sequence (NonTerminal @name="SLComment")) (Sequence (Predicate @type="MustNotMatch" (Literal @caption="}")) (AnyChar)))) (Production @name="Attribute" (Choice (Sequence (NonTerminal @name="Identifier") (Multiple @multiplicity="ZeroOrOne" (Choice (Sequence (NonTerminal @name="OPEN") (NonTerminal @name="AttValue") (NonTerminal @name="CLOSE"))))))) (Production @name="AttValue" (Choice (Sequence (NonTerminal @name="Integer")) (Sequence (NonTerminal @name="QName")) (Sequence (NonTerminal @name="StringLit") (NonTerminal @name="Spacing")))) (Production @name="QName" (Choice (Sequence (NonTerminal @name="Id") (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (Literal @caption=".") (NonTerminal @name="Id")))) (NonTerminal @name="Spacing")))) (Production @name="SName" (Choice (Sequence (NonTerminal @name="LESS") (NonTerminal @name="Id") (NonTerminal @name="GREATER")))) (Production @name="Identifier" (Choice (Sequence (NonTerminal @name="Id") (NonTerminal @name="Spacing")))) (Production @name="Id" (Choice (Sequence (CharClass @caption="a-zA-Z" (CharRange @first="a" @last="z") (CharRange @first="A" @last="Z")) (Multiple @multiplicity="ZeroOrMore" (CharClass @caption="a-zA-Z0-9" (CharRange @first="a" @last="z") (CharRange @first="A" @last="Z") (CharRange @first="0" @last="9")))))) (Production @name="Literal" (Choice (Sequence (Choice (Sequence (Literal @caption="_")) (Sequence (NonTerminal @name="CharLit")) (Sequence (NonTerminal @name="StringLit")) (Sequence (NonTerminal @name="Class"))) (NonTerminal @name="Spacing")))) (Production @name="CharLit" (Choice (Sequence (CharClass @caption="'" (CharRange @first="'")) (Choice (Sequence (NonTerminal @name="Escape")) (Sequence (Predicate @type="MustNotMatch" (CharClass @caption="'\\" (CharRange @first="'") (CharRange @first="\\"))) (AnyChar))) (CharClass @caption="'" (CharRange @first="'"))))) (Production @name="StringLit" (Choice (Sequence (CharClass @caption="\"" (CharRange @first="\"")) (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (NonTerminal @name="Escape")) (Sequence (Predicate @type="MustNotMatch" (CharClass @caption="\"\\" (CharRange @first="\"") (CharRange @first="\\"))) (AnyChar)))) (CharClass @caption="\"" (CharRange @first="\""))))) (Production @name="Class" (Choice (Sequence (Literal @caption="[") (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (NonTerminal @name="Char") (Literal @caption="-") (NonTerminal @name="Char")) (Sequence (NonTerminal @name="Char")))) (Literal @caption="]")))) (Production @name="Char" (Choice (Sequence (NonTerminal @name="Escape")) (Sequence (Predicate @type="MustNotMatch" (CharClass @caption="\\-]" (CharRange @first="\\") (CharRange @first="-") (CharRange @first="]"))) (AnyChar)))) (Production @name="Escape" (Choice (Sequence (Literal @caption="\\") (CharClass @caption="btnfr\"'-[\\]" (CharRange @first="b") (CharRange @first="t") (CharRange @first="n") (CharRange @first="f") (CharRange @first="r") (CharRange @first="\"") (CharRange @first="'") (CharRange @first="-") (CharRange @first="[") (CharRange @first="\\") (CharRange @first="]"))) (Sequence (Literal @caption="\\") (Literal @caption="u") (NonTerminal @name="HexQuad")) (Sequence (NonTerminal @name="OctalEscape")))) (Production @name="OctalEscape" (Choice (Sequence (Literal @caption="\\") (Choice (Sequence (CharClass @caption="0-3" (CharRange @first="0" @last="3")) (NonTerminal @name="OctDigit") (NonTerminal @name="OctDigit")) (Sequence (NonTerminal @name="OctDigit") (NonTerminal @name="OctDigit")) (Sequence (NonTerminal @name="OctDigit")))))) (Production @name="Integer" (Choice (Sequence (Choice (Sequence (NonTerminal @name="HexNumber")) (Sequence (NonTerminal @name="OctNumber")) (Sequence (NonTerminal @name="Number"))) (NonTerminal @name="Spacing")))) (Production @name="HexNumber" (Choice (Sequence (Literal @caption="0") (CharClass @caption="xX" (CharRange @first="x") (CharRange @first="X")) (Multiple @multiplicity="OneOrMore" (NonTerminal @name="HexDigit"))))) (Production @name="HexQuad" (Choice (Sequence (NonTerminal @name="HexDigit") (NonTerminal @name="HexDigit") (NonTerminal @name="HexDigit") (NonTerminal @name="HexDigit")))) (Production @name="HexDigit" (Choice (Sequence (CharClass @caption="0-9a-fA-F" (CharRange @first="0" @last="9") (CharRange @first="a" @last="f") (CharRange @first="A" @last="F"))))) (Production @name="Number" (Choice (Sequence (Literal @caption="0")) (Sequence (NonTerminal @name="NZDigit") (Multiple @multiplicity="ZeroOrMore" (NonTerminal @name="Digit"))))) (Production @name="NZDigit" (Choice (Sequence (CharClass @caption="1-9" (CharRange @first="1" @last="9"))))) (Production @name="Digit" (Choice (Sequence (CharClass @caption="0-9" (CharRange @first="0" @last="9"))))) (Production @name="OctNumber" (Choice (Sequence (Literal @caption="0") (Multiple @multiplicity="OneOrMore" (NonTerminal @name="OctDigit"))))) (Production @name="OctDigit" (Choice (Sequence (CharClass @caption="0-7" (CharRange @first="0" @last="7"))))) (Production @name="ELLIPSIS" (Choice (Sequence (Literal @caption="...") (NonTerminal @name="Spacing")))) (Production @name="PLUSEQUAL" (Choice (Sequence (Literal @caption="+=") (NonTerminal @name="Spacing")))) (Production @name="MINUSEQUAL" (Choice (Sequence (Literal @caption="-=") (NonTerminal @name="Spacing")))) (Production @name="COLONEQUAL" (Choice (Sequence (Literal @caption=":=") (NonTerminal @name="Spacing")))) (Production @name="COMMA" (Choice (Sequence (Literal @caption=",") (NonTerminal @name="Spacing")))) (Production @name="EQUAL" (Choice (Sequence (Literal @caption="=") (NonTerminal @name="Spacing")))) (Production @name="SLASH" (Choice (Sequence (Literal @caption="/") (Predicate @type="MustNotMatch" (CharClass @caption="/*" (CharRange @first="/") (CharRange @first="*"))) (NonTerminal @name="Spacing")))) (Production @name="AND" (Choice (Sequence (Literal @caption="&") (NonTerminal @name="Spacing")))) (Production @name="NOT" (Choice (Sequence (Literal @caption="!") (NonTerminal @name="Spacing")))) (Production @name="CARET" (Choice (Sequence (Literal @caption="^") (NonTerminal @name="Spacing")))) (Production @name="COLON" (Choice (Sequence (Literal @caption=":") (NonTerminal @name="Spacing")))) (Production @name="QUESTION" (Choice (Sequence (Literal @caption="?") (NonTerminal @name="Spacing")))) (Production @name="STAR" (Choice (Sequence (Literal @caption="*") (NonTerminal @name="Spacing")))) (Production @name="PLUS" (Choice (Sequence (Literal @caption="+") (NonTerminal @name="Spacing")))) (Production @name="OPEN" (Choice (Sequence (Literal @caption="(") (NonTerminal @name="Spacing")))) (Production @name="CLOSE" (Choice (Sequence (Literal @caption=")") (NonTerminal @name="Spacing")))) (Production @name="SEMICOLON" (Choice (Sequence (Literal @caption=";") (NonTerminal @name="Spacing")))) (Production @name="LESS" (Choice (Sequence (Literal @caption="<")))) (Production @name="GREATER" (Choice (Sequence (Literal @caption=">") (NonTerminal @name="Spacing")))) (Production @name="Spacing" (Choice (Sequence (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (NonTerminal @name="Space")) (Sequence (NonTerminal @name="SLComment")) (Sequence (NonTerminal @name="MLComment"))))))) (Production @name="FSpacing" (Choice (Sequence (Multiple @multiplicity="OneOrMore" (Choice (Sequence (NonTerminal @name="Space")) (Sequence (NonTerminal @name="SLComment")) (Sequence (NonTerminal @name="MLComment"))))))) (Production @name="Space" (Choice (Sequence (Literal @caption=" ")) (Sequence (Literal @caption="\t")) (Sequence (Literal @caption="\f")) (Sequence (NonTerminal @name="EOL")))) (Production @name="SLComment" (Choice (Sequence (Literal @caption="//") (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (Predicate @type="MustNotMatch" (CharClass @caption="\n\r" (CharRange @first="\n") (CharRange @first="\r"))) (AnyChar)))) (NonTerminal @name="EOL")))) (Production @name="MLComment" (Choice (Sequence (Literal @caption="/*") (Multiple @multiplicity="ZeroOrMore" (Choice (Sequence (Literal @caption="*") (Predicate @type="MustNotMatch" (Literal @caption="/"))) (Sequence (Predicate @type="MustNotMatch" (Literal @caption="*")) (AnyChar)))) (Literal @caption="*/")))) (Production @name="EOL" (Choice (Sequence (Literal @caption="\r") (Literal @caption="\n")) (Sequence (Literal @caption="\r")) (Sequence (Literal @caption="\n")))) (Production @name="EOF" (Choice (Sequence (Predicate @type="MustNotMatch" (AnyChar))))))