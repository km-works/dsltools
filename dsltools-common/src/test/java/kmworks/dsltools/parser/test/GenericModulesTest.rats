/*
 *   Copyright (C) 2012-2018 Christian P. Lerch, Vienna, Austria.
 *
 *   This file is part of DSLtools - a suite of software tools for effective
 *   DSL implementations.
 *
 *   DSLtools is free software: you can use, modify and redistribute it under
 *   the terms of the GNU General Public License version 3 as published by
 *   the Free Software Foundation, Inc. <http://fsf.org/>
 *
 *   DSLtools is distributed in the hope that it will be useful, but WITHOUT
 *   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *   FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 *   version 3 for details.
 *
 *   You should have received a copy of the GNU General Public License along
 *   with this distribution. If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
 */
module GenericModulesTest;

import base.GenericSpacing;         // w EOI Newline etc
import base.GenericStringLiteral;   // StringLiteral

header {
import java.util.*;
import kmworks.dsltools.parser.base.*;
import kmworks.dsltools.ast.base.*;
import static kmworks.dsltools.parser.base.CodepointUtils.*;
}

body {
    private NodeFactory factory = new NodeFactory(this);
}

option withLocation, parser(kmworks.dsltools.parser.test.GenericModulesTest_Parser),
    parent(kmworks.dsltools.parser.base.AbstractParser);

/*
 *    Grammar :: StringLiteralNode
 */
public StringLiteralNode Start
    =   w sl:StringLiteral w EOI
        { yyValue = factory.pin(yyStart).mkStringLiteral(sl); }
;
